# upstream puma {
#   server unix:/home/deploy/marv/shared/tmp/sockets/marv-puma.sock fail_timeout=0;
# }

# server {
#   listen 80;
#   listen [::]:80 default_server;

#   server_name virmaautospares.com www.virmaautospares.com;

#   if ($http_host != 'virmaautospares.com'){
#     return 301 https://virmaautospares.com;
#   }

#   listen 443 ssl; # managed by Certbot

#   # RSA certificate
#   ssl_certificate /etc/letsencrypt/live/virmaautospares.com/fullchain.pem; # managed by Certbot
#   ssl_certificate_key /etc/letsencrypt/live/virmaautospares.com/privkey.pem; # managed by Certbot

#   include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

#   # Redirect non-https traffic to https
#   if ($scheme != "https") {
#     return 301 https://$host$request_uri;
#   } # managed by Certbot

#   client_max_body_size 4G;
#   root /home/deploy/marv/current/public;
#   access_log /home/deploy/marv/current/log/nginx.access.log;
#   error_log /home/deploy/marv/current/log/nginx.error.log info;
#   try_files $uri/index.html $uri @puma;

# # this causes active astorage nginx to not load files
# # location ~* .(jpg|jpeg|mp3|eot|png|svg|ttf|woff|swf|gif|ico|css|js)(.*)$ {
# #    gzip_static on;
# #    expires 1d;
# #    add_header Cache-Control public;
# #    add_header ETag  "";
# #  }

#   location @puma {
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header Host $http_host;
#     proxy_set_header X-Forwarded-Proto https;
#     proxy_set_header X-Forwarded-Ssl on;
#     proxy_redirect off;
#     proxy_pass http://puma;
#   }
#   error_page 500 502 503 504 /500.html;
# }


# This code is regenerated by certbot

upstream puma {
  server unix:/home/deploy/marv/shared/tmp/sockets/marv-puma.sock fail_timeout=0;
}

server {

  server_name virmaautospares.com www.virmaautospares.com;

  if ($http_host != 'virmaautospares.com'){
    return 301 https://virmaautospares.com;
  }

  # Redirect non-https traffic to https
  if ($scheme != "https") {
    return 301 https://$host$request_uri;
  } # managed by Certbot

  client_max_body_size 4G;
  root /home/deploy/marv/current/public;
  access_log /home/deploy/marv/current/log/nginx.access.log;
  error_log /home/deploy/marv/current/log/nginx.error.log info;
  try_files $uri/index.html $uri @puma;

# this causes active astorage nginx to not load files
# location ~* .(jpg|jpeg|mp3|eot|png|svg|ttf|woff|swf|gif|ico|css|js)(.*)$ {
#    gzip_static on;
#    expires 1d;
#    add_header Cache-Control public;
#    add_header ETag  "";
#  }

  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_redirect off;
    proxy_pass http://puma;
  }
  error_page 500 502 503 504 /500.html;

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/virmaautospares.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/virmaautospares.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


server {
    if ($host = www.virmaautospares.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = virmaautospares.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

  # listen 80;
  # listen [::]:80 ipv6only=on default_server;

  server_name virmaautospares.com www.virmaautospares.com;
    return 404; # managed by Certbot
}